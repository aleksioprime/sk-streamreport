# Generated by Django 4.2.4 on 2023-10-25 13:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=32, null=True)),
                ('date_of_birth', models.DateField(blank=True, max_length=10, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужчина'), ('female', 'Женщина'), ('None', 'No program')], default='none', max_length=6, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='member_photos')),
                ('dnevnik_token', models.CharField(blank=True, max_length=255, null=True)),
                ('dnevnik_id', models.CharField(blank=True, max_length=40, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['last_name', 'first_name', 'is_active'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Учебный год')),
                ('date_start', models.DateField(verbose_name='Дата начала')),
                ('date_end', models.DateField(verbose_name='Дата окончания')),
            ],
            options={
                'verbose_name': 'Учебный год',
                'verbose_name_plural': 'Учебные года',
                'ordering': ['date_start'],
            },
        ),
        migrations.CreateModel(
            name='StudyYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Год обучения')),
                ('number_ib', models.CharField(max_length=12, null=True, verbose_name='Год обучения в IB')),
                ('level', models.CharField(choices=[('noo', 'Начальная школа'), ('ooo', 'Средняя школа'), ('soo', 'Старшая школа'), ('None', 'Не указано')], default=None, max_length=4, verbose_name='Национальные уровни образования')),
                ('program_ib', models.CharField(choices=[('pyp', 'Primary Years Programme'), ('myp', 'Middle Years Programme'), ('dp', 'Diploma Programme'), ('None', 'No program')], default=None, max_length=4, null=True, verbose_name='IB-программа')),
            ],
            options={
                'verbose_name': 'Параллель обучения',
                'verbose_name_plural': 'Параллели обучения',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название кафедры')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='department_logos', verbose_name='Фотография')),
                ('employees', models.ManyToManyField(related_name='departments', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудники')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=1, null=True, verbose_name='Литера класса')),
                ('dnevnik_id', models.CharField(max_length=255, null=True, verbose_name='ID системы Дневник.РУ')),
                ('program_ib', models.CharField(choices=[('pyp', 'Primary Years Programme'), ('myp', 'Middle Years Programme'), ('dp', 'Diploma Programme'), ('None', 'No program')], default=None, max_length=4, null=True, verbose_name='IB-программа')),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentor_classes', to=settings.AUTH_USER_MODEL, verbose_name='Наставник')),
                ('psychologist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='psycho_classes', to=settings.AUTH_USER_MODEL, verbose_name='Психолог/воспитатель')),
                ('students', models.ManyToManyField(related_name='classes', to=settings.AUTH_USER_MODEL, verbose_name='Студенты')),
                ('year_academic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='general.academicyear', verbose_name='Учебный год')),
                ('year_study', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes', to='general.studyyear', verbose_name='Год обучения')),
            ],
            options={
                'verbose_name': 'Учебный класс',
                'verbose_name_plural': 'Учебные классы',
                'ordering': ['year_academic', 'year_study', 'letter'],
            },
        ),
    ]
