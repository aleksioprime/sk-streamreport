# Generated by Django 4.2.4 on 2023-12-02 22:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('curriculum', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Отчество')),
                ('gender', models.CharField(blank=True, choices=[('М', 'Мужчина'), ('Ж', 'Женщина'), ('None', 'Не указан')], default='none', max_length=6, null=True, verbose_name='Пол')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='member_photos', verbose_name='Фотография')),
                ('dnevnik_token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Токен доступа в Дневник')),
                ('dnevnik_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='ID Дневника')),
                ('dnevnik_user_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='ID пользователя Дневника')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['last_name', 'first_name', 'is_active'],
            },
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=0, verbose_name='Учебный год')),
                ('date_start', models.DateField(verbose_name='Дата начала')),
                ('date_end', models.DateField(verbose_name='Дата окончания')),
            ],
            options={
                'verbose_name': 'Учебный год',
                'verbose_name_plural': 'Учебные года',
                'ordering': ['date_start'],
            },
        ),
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=1, null=True, verbose_name='Литера класса')),
                ('dnevnik_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID системы Дневник.РУ')),
                ('curriculum', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes', to='curriculum.curriculum', verbose_name='Учебный план')),
            ],
            options={
                'verbose_name': 'Учебный класс',
                'verbose_name_plural': 'Учебные классы',
                'ordering': ['-year_academic', 'year_study', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='StudyYearIb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=None, null=True, verbose_name='Номер параллели IB')),
                ('name', models.CharField(max_length=12, null=True, verbose_name='Название параллели IB')),
                ('program_ib', models.CharField(choices=[('pyp', 'Primary Years Programme'), ('myp', 'Middle Years Programme'), ('dp', 'Diploma Programme'), ('None', 'No program')], default=None, max_length=4, null=True, verbose_name='IB-программа')),
            ],
            options={
                'verbose_name': 'Параллель обучения IB',
                'verbose_name_plural': 'Параллели обучения IB',
                'ordering': ['number', 'program_ib', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StudyYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Номер параллели')),
                ('level', models.CharField(choices=[('noo', 'Начальная школа'), ('ooo', 'Средняя школа'), ('soo', 'Старшая школа'), ('None', 'Не указано')], default=None, max_length=4, verbose_name='Уровень образования')),
                ('ib', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='year', to='general.studyyearib', verbose_name='Параллель по IB')),
            ],
            options={
                'verbose_name': 'Параллель обучения',
                'verbose_name_plural': 'Параллели обучения',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='department_logos', verbose_name='Фотография')),
                ('employees', models.ManyToManyField(blank=True, related_name='departments', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудники')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassGroupRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255, null=True, verbose_name='Роль')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_roles', to='general.classgroup', verbose_name='Группа')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_roles', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Учебный класс: роль',
                'verbose_name_plural': 'Учебные классы: роли',
                'ordering': ['user', 'group', 'role'],
            },
        ),
        migrations.AddField(
            model_name='classgroup',
            name='extra',
            field=models.ManyToManyField(related_name='extra_classes', through='general.ClassGroupRole', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудники класса'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='mentor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentor_classes', to=settings.AUTH_USER_MODEL, verbose_name='Наставник'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='students',
            field=models.ManyToManyField(related_name='classes', to=settings.AUTH_USER_MODEL, verbose_name='Студенты'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='year_academic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='general.academicyear', verbose_name='Учебный год'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='year_study',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes', to='general.studyyear', verbose_name='Параллель'),
        ),
        migrations.AddField(
            model_name='classgroup',
            name='year_study_ib',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes', to='general.studyyearib', verbose_name='Год обучения по IB'),
        ),
    ]
