# Generated by Django 4.2.4 on 2023-09-01 18:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('general', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('name_eng', models.CharField(max_length=128, null=True, verbose_name='Название на англ. языке')),
                ('type', models.CharField(choices=[('base', 'Обязательная часть ФГОС'), ('base_fgos', 'Обязательная часть ФГОС в IB'), ('base_ib', 'Обязательная часть IB'), ('extra', 'Внеурочная деятельность'), ('None', 'Не выбрано')], default='base', max_length=10, verbose_name='Тип предмета')),
                ('dnevnik_id', models.CharField(max_length=40, null=True, verbose_name='ID системы Дневник.РУ')),
                ('level', models.CharField(choices=[('noo', 'Начальная школа'), ('ooo', 'Средняя школа'), ('soo', 'Старшая школа'), ('None', 'Не указано')], default=None, max_length=4, verbose_name='Уровень образования')),
                ('need_report', models.BooleanField(default=False, verbose_name='Необходимость репорта')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject', to='general.department', verbose_name='Учебное подразделение')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['type', 'group_ib', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubjectGroupFgos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('type', models.CharField(choices=[('area', 'Предметная область'), ('direction', 'Направление'), ('None', 'Не выбрано')], default='area', max_length=9, verbose_name='Тип группы')),
            ],
            options={
                'verbose_name': 'Предметная группа ФГОС',
                'verbose_name_plural': 'Предметные группы ФГОС',
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubjectGroupIb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=128, null=True, verbose_name='Название на рус. языке')),
                ('logo', models.ImageField(null=True, upload_to='subjectgroup_logos', verbose_name='Логотип')),
                ('program', models.CharField(choices=[('pyp', 'Primary Years Programme'), ('myp', 'Middle Years Programme'), ('dp', 'Diploma Programme'), ('None', 'No program')], default=None, max_length=4, null=True)),
            ],
            options={
                'verbose_name': 'Предметная группа IB',
                'verbose_name_plural': 'Предметные группы IB',
                'ordering': ['program', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Название')),
                ('name_short', models.CharField(blank=True, max_length=128, null=True, verbose_name='Сокращённое название')),
                ('level', models.CharField(choices=[('noo', 'Начальная школа'), ('ooo', 'Средняя школа'), ('soo', 'Старшая школа'), ('None', 'Не указано')], default=None, max_length=4, verbose_name='Уровень образования')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='academic_plan', to='general.academicyear', verbose_name='Учебный год')),
            ],
            options={
                'verbose_name': 'Учебный план',
                'verbose_name_plural': 'Учебные планы',
                'ordering': ['year', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TeachingLoad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.PositiveSmallIntegerField(default=1, verbose_name='Часы')),
                ('groups', models.ManyToManyField(blank=True, related_name='teaching_load', to='general.classgroup', verbose_name='Классы')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_load', to='syllabus.subject', verbose_name='Предмет')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_load', to=settings.AUTH_USER_MODEL, verbose_name='Учитель')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_load', to='general.academicyear', verbose_name='Учебный год')),
            ],
            options={
                'verbose_name': 'Рабочая нагрузка учителя',
                'verbose_name_plural': 'Рабочие нагрузки учителей',
                'ordering': ['year', 'subject', 'groups__year_study', 'groups__year_study', 'teacher'],
            },
        ),
        migrations.CreateModel(
            name='SyllabusSubjectHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.PositiveSmallIntegerField(default=1, verbose_name='Кол-во часов')),
                ('academic_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='syllabus_subject_hours', to='syllabus.syllabus', verbose_name='Учебный план')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='syllabus_subject_hours', to='syllabus.subject', verbose_name='Предмет')),
                ('years', models.ManyToManyField(related_name='syllabus_subject_hours', to='general.studyyear', verbose_name='Параллель')),
            ],
            options={
                'verbose_name': 'Учебный план - нагрузка',
                'verbose_name_plural': 'Учебные планы - нагрузка',
                'ordering': ['subject__name', 'years__number'],
            },
        ),
        migrations.AddField(
            model_name='subject',
            name='group_fgos',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject', to='syllabus.subjectgroupfgos', verbose_name='Предметная область в РФ'),
        ),
        migrations.AddField(
            model_name='subject',
            name='group_ib',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject', to='syllabus.subjectgroupib', verbose_name='Предметная группа в IB'),
        ),
    ]
