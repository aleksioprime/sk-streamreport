# Generated by Django 4.2.4 on 2023-12-13 17:03

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dp', '0001_initial'),
        ('ibo', '0001_initial'),
        ('curriculum', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DpUnitPlanner',
            fields=[
                ('unitplanerbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ibo.unitplanerbasemodel')),
                ('levels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('SL', 'Standart Level'), ('HL', 'High Level')], max_length=5), blank=True, default=list, size=None, verbose_name='Levels')),
                ('transfer_goals', models.TextField(blank=True, null=True, verbose_name='Transfer goals')),
                ('essential_understandings', models.TextField(blank=True, null=True, verbose_name='Essential Understandings')),
                ('misunderstandings', models.TextField(blank=True, null=True, verbose_name='Missed concepts/misunderstandings')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Skills')),
                ('concepts', models.TextField(blank=True, null=True, verbose_name='Concepts')),
                ('international_mindedness', models.TextField(blank=True, null=True, verbose_name='International Mindedness')),
                ('academic_integrity', models.TextField(blank=True, null=True, verbose_name='Academic Integrity')),
                ('infocom_technology', models.TextField(blank=True, null=True, verbose_name='Information Communication Technology')),
                ('language_learning', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Activating background knowledge', 'Activating background knowledge'), ('Scaffolding for new learning', 'Scaffolding for new learning'), ('Acquisition of new learning through practice', 'Acquisition of new learning through practice'), ('Demonstrating proficiency', 'Demonstrating proficiency')], max_length=64), blank=True, default=list, size=None, verbose_name='Language and learning')),
                ('language_learning_text', models.TextField(blank=True, null=True, verbose_name='Language and learning description')),
                ('ee_connections', models.TextField(blank=True, null=True, verbose_name='EE / Individual project connections')),
                ('tok_connections', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Core theme', 'Core theme'), ('Optional themes', 'Optional themes'), ('Areas of knowledge', 'Areas of knowledge'), ('Key concepts', 'Key concepts')], max_length=64), blank=True, default=list, size=None, verbose_name='TOK Connections')),
                ('tok_connections_text', models.TextField(blank=True, null=True, verbose_name='TOK Connections description')),
                ('cas_connections', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Creativity', 'Creativity'), ('Activity', 'Activity'), ('Service', 'Service')], max_length=64), blank=True, default=list, size=None, verbose_name='CAS Connections')),
                ('cas_connections_text', models.TextField(blank=True, null=True, verbose_name='CAS Connections description')),
                ('formative_assessment', models.TextField(blank=True, null=True, verbose_name='Formative assessment')),
                ('summative_assessment', models.TextField(blank=True, null=True, verbose_name='Summative assessment')),
                ('internal_assessment', models.TextField(blank=True, null=True, verbose_name='Internal assessment')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Peer and self assessment')),
                ('criteria_text', models.TextField(blank=True, null=True, verbose_name='Assessment criteria description')),
                ('prior_experiences', models.TextField(blank=True, null=True, verbose_name='Prior learning experience')),
                ('pedagogical_approaches', models.TextField(blank=True, null=True, verbose_name='Pedagogical approaches')),
                ('student_expectations', models.TextField(blank=True, null=True, verbose_name='Student expectations')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('learning_process', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Lecture', 'Lecture'), ('Socratic seminar', 'Socratic seminar'), ('Small group/pair work', 'Small group/pair work'), ('PowerPoint lecture/notes', 'PowerPoint lecture/notes'), ('Individual presentations', 'Individual presentations'), ('Group presentations', 'Group presentations'), ('Student lecture/leading', 'Student lecture/leading'), ('Interdisciplinary Learning', 'Interdisciplinary Learning')], max_length=64), blank=True, default=list, size=None, verbose_name='Learning Process')),
                ('learning_process_text', models.TextField(blank=True, null=True, verbose_name='Learning Process description')),
                ('differentiation', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Affirm identity – build self-esteem', 'Affirm identity – build self-esteem'), ('Value prior knowledge', 'Value prior knowledge'), ('Scaffold learning', 'Scaffold learning'), ('Extend learning', 'Extend learning')], max_length=64), blank=True, default=list, size=None, verbose_name='Differentiation')),
                ('differentiation_text', models.TextField(blank=True, null=True, verbose_name='Differentiation description')),
                ('learning_experiences', models.TextField(blank=True, null=True, verbose_name='Learning experiences and strategies')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Resources')),
                ('cross_curricular_links', models.TextField(blank=True, null=True, verbose_name='Cross-curricular links')),
                ('co_curricular_links', models.TextField(blank=True, null=True, verbose_name='Co-curricular links')),
                ('work_well', models.TextField(blank=True, null=True, verbose_name='What worked well?')),
                ('work_well_not', models.TextField(blank=True, null=True, verbose_name='What didn’t work well?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes/changes/suggestions')),
                ('aims', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='dp.dpaim', verbose_name='Aims')),
                ('criteria', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='dp.criterion', verbose_name='Assessment criteria')),
                ('objectives', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='dp.dpobjective', verbose_name='Objectives')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_unitplans', to='curriculum.subject', verbose_name='Subject')),
                ('syllabus_content', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='dp.coursecontent', verbose_name='Syllabus Content')),
            ],
            options={
                'verbose_name': 'DP: UnitPlan',
                'verbose_name_plural': 'DP: UnitPlans',
                'ordering': ['year', 'subject', 'order', 'title'],
            },
            bases=('ibo.unitplanerbasemodel',),
        ),
        migrations.AddField(
            model_name='dpobjectiveitem',
            name='objective',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='dp.dpobjective', verbose_name='Objective'),
        ),
        migrations.AddField(
            model_name='dpobjective',
            name='discipline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_objectives', to='curriculum.ibdiscipline', verbose_name='Discipline IB'),
        ),
        migrations.AddField(
            model_name='dpinquiryquestion',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_questions', to='dp.dpunitplanner', verbose_name='Unit DP'),
        ),
        migrations.AddField(
            model_name='dpatlskill',
            name='cluster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dp_skills', to='ibo.atlcluster', verbose_name='Кластер ATL'),
        ),
        migrations.AddField(
            model_name='dpatldevelop',
            name='atl',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atl_develops', to='dp.dpatlskill', verbose_name='ATL Skill'),
        ),
        migrations.AddField(
            model_name='dpatldevelop',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='dp.dpunitplanner', verbose_name='Unit DP'),
        ),
        migrations.AddField(
            model_name='dpaim',
            name='discipline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_aims', to='curriculum.ibdiscipline', verbose_name='Discipline IB'),
        ),
        migrations.AddField(
            model_name='criterion',
            name='discipline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_criteria', to='curriculum.ibdiscipline', verbose_name='Discipline IB'),
        ),
        migrations.AddField(
            model_name='coursetopic',
            name='discipline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_topics', to='curriculum.ibdiscipline', verbose_name='Discipline IB'),
        ),
        migrations.AddField(
            model_name='coursecontent',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_contents', to='dp.coursetopic', verbose_name='Course Topic'),
        ),
    ]
