# Generated by Django 4.2.4 on 2023-12-02 22:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ibo', '0001_initial'),
        ('curriculum', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'MYP: Глобальный контекст',
                'verbose_name_plural': 'MYP: Глобальные контексты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='GlobalContextExploration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('global_context', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='explorations', to='myp.globalcontext', verbose_name='Глобальный контекст')),
            ],
            options={
                'verbose_name': 'MYP: Глобальный контекст - Линия исследования',
                'verbose_name_plural': 'MYP: Глобальный контекст - Линии исследований',
                'ordering': ['global_context', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MypAim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_aims', to='curriculum.ibsubjectgroup', verbose_name='Предметная группа')),
            ],
            options={
                'verbose_name': 'MYP: Цель',
                'verbose_name_plural': 'MYP: Цели',
                'ordering': ['group', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MypKeyConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=32, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'MYP: Ключевой концепт',
                'verbose_name_plural': 'MYP: Ключевые концепты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MypObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(choices=[('a', 'Критерий A'), ('b', 'Критерий B'), ('c', 'Критерий C'), ('d', 'Критерий D')], max_length=1, verbose_name='Символ')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_objectives', to='curriculum.ibsubjectgroup', verbose_name='Предметная группа IB')),
            ],
            options={
                'verbose_name': 'MYP: Предметная цель',
                'verbose_name_plural': 'MYP: Предметные цели',
                'ordering': ['group', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='MypRelatedConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('disciplines', models.ManyToManyField(related_name='related_concepts', to='curriculum.ibdiscipline', verbose_name='Специальные дисциплины')),
            ],
            options={
                'verbose_name': 'MYP: Сопутствующий концепт',
                'verbose_name_plural': 'MYP: Сопутствующие концепты',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Strand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1, verbose_name='Абсолютный номер')),
                ('letter', models.PositiveIntegerField(choices=[(1, 'i'), (2, 'ii'), (3, 'iii'), (4, 'iv'), (5, 'v')], default=1, verbose_name='Метка в критерии')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strands', to='myp.mypobjective', verbose_name='Предметная цель')),
            ],
            options={
                'verbose_name': 'MYP: Стрэнд',
                'verbose_name_plural': 'MYP: Стрэнды',
                'ordering': ['objective', 'number', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='StrandLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Описание')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Описание на рус. языке')),
                ('level', models.PositiveIntegerField(choices=[(1, 'Year 1 / Emergent'), (3, 'Year 3 / Capable'), (5, 'Year 5 / Proficient'), (0, 'Year All')], default=0, null=True, verbose_name='Образовательный уровень')),
                ('strand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strand_levels', to='myp.strand', verbose_name='Стрэнд')),
            ],
            options={
                'verbose_name': 'MYP: Предметная цель на уровне',
                'verbose_name_plural': 'MYP: Предметные цели на уровне',
                'ordering': ['level', 'strand'],
            },
        ),
        migrations.CreateModel(
            name='StrandLevelAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True, verbose_name='Описание')),
                ('name_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('point', models.PositiveIntegerField(default=0, verbose_name='Баллы')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achieve_levels', to='myp.strandlevel', verbose_name='Предметная цель')),
            ],
            options={
                'verbose_name': 'MYP: Уровень достижений',
                'verbose_name_plural': 'MYP: Уровни достижений',
                'ordering': ['level', 'point'],
            },
        ),
        migrations.CreateModel(
            name='MypUnitPlannerId',
            fields=[
                ('unitplanerbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ibo.unitplanerbasemodel')),
                ('real_world_issue', models.TextField(blank=True, null=True, verbose_name='Проблема реального мира')),
                ('integrated_purpose', models.TextField(blank=True, null=True, verbose_name='Цель интеграции')),
                ('synthesis', models.TextField(blank=True, null=True, verbose_name='Синтез')),
                ('conceptual_understanding', models.TextField(blank=True, null=True, verbose_name='Концептуальное понимание')),
                ('statement_inquiry', models.TextField(blank=True, null=True, verbose_name='Формулировка исследования')),
                ('tasks', models.TextField(blank=True, null=True, verbose_name='Задания')),
                ('introduction', models.TextField(blank=True, null=True, verbose_name='Введение в МДП')),
                ('learning_teaching', models.TextField(blank=True, null=True, verbose_name='Учебная деятельность')),
                ('summative_assessment', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание')),
                ('differentiation', models.TextField(blank=True, null=True, verbose_name='Дифференцированный подход')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Ресурсы')),
                ('explorations', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='myp.globalcontextexploration', verbose_name='Линии исследования')),
                ('global_context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_iduplans', to='myp.globalcontext', verbose_name='Глобальный контекст')),
                ('key_concepts', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='myp.mypkeyconcept', verbose_name='Ключевые концепты')),
                ('objectives', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='myp.mypobjective', verbose_name='Критерии оценки')),
                ('strands', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='myp.strand', verbose_name='Предметные цели (стренды)')),
            ],
            options={
                'verbose_name': 'MYP IDU: UnitPlan - Междисциплинарный юнит',
                'verbose_name_plural': 'MYP IDU: UnitPlans - Междисциплинарные юниты',
                'ordering': ['year', 'title'],
            },
            bases=('ibo.unitplanerbasemodel',),
        ),
        migrations.CreateModel(
            name='MypUnitPlanner',
            fields=[
                ('unitplanerbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ibo.unitplanerbasemodel')),
                ('level', models.CharField(choices=[('a', 'Критерий A'), ('b', 'Критерий B'), ('c', 'Критерий C'), ('d', 'Критерий D')], max_length=12, null=True, verbose_name='Образовательный уровень')),
                ('conceptual_understanding', models.TextField(blank=True, null=True, verbose_name='Концептуальное понимание')),
                ('statement_inquiry', models.TextField(blank=True, null=True, verbose_name='Формулировка исследования')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Содержание (темы, знания и умения)')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Умения')),
                ('international_mindedness', models.TextField(blank=True, null=True, verbose_name='Межкультурное понимание')),
                ('academic_integrity', models.TextField(blank=True, null=True, verbose_name='Академическая честность')),
                ('language_development', models.TextField(blank=True, null=True, verbose_name='Языковое развитие')),
                ('infocom_technology', models.TextField(blank=True, null=True, verbose_name='Использование средств ИКТ')),
                ('service_as_action', models.TextField(blank=True, null=True, verbose_name='Служение как действие')),
                ('formative_assessment', models.TextField(blank=True, null=True, verbose_name='Формирующее оценивание')),
                ('summative_assessment_task', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание (задачи)')),
                ('summative_assessment_soi', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание (взаимосвязь с SOI)')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Взаимное и самооценивание')),
                ('standardization_moderation', models.TextField(blank=True, null=True, verbose_name='Стандартизация и модерация')),
                ('prior_experiences', models.TextField(blank=True, null=True, verbose_name='Предыдущий опыт обучения')),
                ('learning_experiences', models.TextField(blank=True, null=True, verbose_name='Учебная деятельность')),
                ('teaching_strategies', models.TextField(blank=True, null=True, verbose_name='Стратегии преподавания')),
                ('student_expectations', models.TextField(blank=True, null=True, verbose_name='Ожидания студентов')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Обратная связь')),
                ('differentiation', models.TextField(blank=True, null=True, verbose_name='Дифференцированный подход')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Ресурсы')),
                ('aims', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='myp.mypaim', verbose_name='Цели')),
                ('explorations', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='myp.globalcontextexploration', verbose_name='Линии исследования')),
                ('global_context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='myp.globalcontext', verbose_name='Глобальный контекст')),
                ('interdisciplinary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='myp.mypunitplannerid', verbose_name='Междисциплинарный юнит')),
                ('key_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='myp.mypkeyconcept', verbose_name='Ключевой концепт')),
                ('objectives', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='myp.mypobjective', verbose_name='Предметные цели / Критерии оценки')),
                ('related_concepts', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='myp.myprelatedconcept', verbose_name='Сопутствующие концепты')),
                ('strands', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='myp.strand', verbose_name='Стренды')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='curriculum.subject', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan',
                'verbose_name_plural': 'MYP: UnitPlans',
                'ordering': ['year', 'subject', 'order', 'title'],
            },
            bases=('ibo.unitplanerbasemodel',),
        ),
        migrations.CreateModel(
            name='MypKeyConceptOfSubjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('comment_rus', models.TextField(blank=True, null=True, verbose_name='Комментарии на рус. языке')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='key_concepts_recomends', to='curriculum.ibsubjectgroup', verbose_name='Предметная группа')),
                ('key_concept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects_recomends', to='myp.mypkeyconcept', verbose_name='Ключевой концепт')),
            ],
            options={
                'verbose_name': 'MYP: Ключевые концепции - Рекомендуемый предмет',
                'verbose_name_plural': 'MYP: Ключевые концепции - Рекомендуемые предметы',
                'ordering': ['group', 'key_concept'],
            },
        ),
        migrations.AddField(
            model_name='mypkeyconcept',
            name='groups',
            field=models.ManyToManyField(related_name='key_concepts', through='myp.MypKeyConceptOfSubjects', to='curriculum.ibsubjectgroup', verbose_name='Рекомендуемые предметные группы'),
        ),
        migrations.CreateModel(
            name='MypInquiryQuestionIdu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Исследовательский вопрос')),
                ('type', models.CharField(choices=[('factual', 'Фактический'), ('conceptual', 'Концептуальный'), ('debatable', 'Дискуссионный')], default='Factual', max_length=12, verbose_name='Тип вопроса')),
                ('line', models.CharField(max_length=255, null=True, verbose_name='Линия исследования')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_questions', to='myp.mypunitplannerid', verbose_name='Междисциплинарный юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP IDU: UnitPlan - Исследовательский вопрос',
                'verbose_name_plural': 'MYP IDU: UnitPlans - Исследовательские вопросы',
                'ordering': ['type', 'question'],
            },
        ),
        migrations.CreateModel(
            name='MypInquiryQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Исследовательский вопрос')),
                ('type', models.CharField(choices=[('factual', 'Фактический'), ('conceptual', 'Концептуальный'), ('debatable', 'Дискуссионный')], default='Factual', max_length=12, verbose_name='Тип вопроса')),
                ('line', models.CharField(max_length=255, null=True, verbose_name='Линия исследования')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_questions', to='myp.mypunitplanner', verbose_name='Юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Исследовательский вопрос',
                'verbose_name_plural': 'MYP: UnitPlans - Исследовательские вопросы',
                'ordering': ['type', 'question'],
            },
        ),
        migrations.CreateModel(
            name='MypAtlSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myp_skills', to='ibo.atlcluster', verbose_name='Кластер ATL')),
            ],
            options={
                'verbose_name': 'MYP: Навык ATL',
                'verbose_name_plural': 'MYP: Навыки ATL',
                'ordering': ['cluster', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MypAtlDevelopIdu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Описание учебных действий')),
                ('atl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idu_atl_develops', to='myp.mypatlskill', verbose_name='Навык ATL')),
                ('strand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idu_atl_develops', to='myp.strand', verbose_name='Предметный стрэнд')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='myp.mypunitplannerid', verbose_name='Междисциплинарный юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP IDU: UnitPlan - Развитие ATL',
                'verbose_name_plural': 'MYP IDU: UnitPlans - Развитие ATL',
                'ordering': ['strand'],
            },
        ),
        migrations.CreateModel(
            name='MypAtlDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Описание учебных действий')),
                ('atl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='myp.mypatlskill', verbose_name='Навык ATL')),
                ('strand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='myp.strand', verbose_name='Предметный стрэнд')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='myp.mypunitplanner', verbose_name='Юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Развитие ATL',
                'verbose_name_plural': 'MYP: UnitPlans - Развитие ATL',
                'ordering': ['strand'],
            },
        ),
    ]
