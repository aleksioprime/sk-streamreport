# Generated by Django 4.2.4 on 2023-10-28 19:18

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
        ('syllabus', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AtlCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
            ],
            options={
                'verbose_name': 'IB: ATL категория',
                'verbose_name_plural': 'IB: ATL категории',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AtlCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clusters', to='units.atlcategory', verbose_name='Категория ATL')),
            ],
            options={
                'verbose_name': 'IB: ATL кластер',
                'verbose_name_plural': 'IB: ATL кластеры',
                'ordering': ['category', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CourseContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=12, verbose_name='Letters')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'DP: Course content',
                'verbose_name_plural': 'DP: Course contents',
                'ordering': ['topic', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('letter', models.CharField(max_length=1, verbose_name='Letter')),
                ('discipline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_criteria', to='syllabus.ibdiscipline', verbose_name='Discipline IB')),
            ],
            options={
                'verbose_name': 'DP: Criterion',
                'verbose_name_plural': 'DP: Criteria',
                'ordering': ['discipline', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='DpAim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('type', models.CharField(choices=[('group', 'Group'), ('subject', 'Subject')], max_length=12, verbose_name='Тype (group or subject)')),
                ('discipline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_aims', to='syllabus.ibdiscipline', verbose_name='Discipline IB')),
            ],
            options={
                'verbose_name': 'DP: Aim',
                'verbose_name_plural': 'DP: Aims',
                'ordering': ['discipline', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DpObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1, verbose_name='Number')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('discipline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_objectives', to='syllabus.ibdiscipline', verbose_name='Discipline IB')),
            ],
            options={
                'verbose_name': 'DP: Objective',
                'verbose_name_plural': 'DP: Objectives',
                'ordering': ['discipline', 'number'],
            },
        ),
        migrations.CreateModel(
            name='EducationalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1, verbose_name='Номер')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('years', models.ManyToManyField(related_name='edu_levels', to='general.studyyear', verbose_name='Года обучения')),
            ],
            options={
                'verbose_name': 'MYP: Образовательный уровень',
                'verbose_name_plural': 'MYP: Образовательные уровни',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GlobalContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'MYP: Глобальный контекст',
                'verbose_name_plural': 'MYP: Глобальные контексты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='GlobalContextExploration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('global_context', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='explorations', to='units.globalcontext', verbose_name='Глобальный контекст')),
            ],
            options={
                'verbose_name': 'MYP: Глобальный контекст - Линия исследования',
                'verbose_name_plural': 'MYP: Глобальный контекст - Линии исследований',
                'ordering': ['global_context', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LearnerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'IB: Профиль студента',
                'verbose_name_plural': 'IB: Профили студента',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MypAim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_aims', to='syllabus.ibsubjectgroup', verbose_name='Предметная группа')),
            ],
            options={
                'verbose_name': 'MYP: Цель',
                'verbose_name_plural': 'MYP: Цели',
                'ordering': ['group', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MypKeyConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=32, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'MYP: Ключевой концепт',
                'verbose_name_plural': 'MYP: Ключевые концепты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MypObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(choices=[('a', 'Критерий A'), ('b', 'Критерий B'), ('c', 'Критерий C'), ('d', 'Критерий D')], max_length=1, verbose_name='Символ')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_objectives', to='syllabus.ibsubjectgroup', verbose_name='Предметная группа IB')),
            ],
            options={
                'verbose_name': 'MYP: Предметная цель',
                'verbose_name_plural': 'MYP: Предметные цели',
                'ordering': ['group', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='MypRelatedConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('disciplines', models.ManyToManyField(related_name='related_concepts', to='syllabus.ibdiscipline', verbose_name='Специальные дисциплины')),
            ],
            options={
                'verbose_name': 'MYP: Сопутствующий концепт',
                'verbose_name_plural': 'MYP: Сопутствующие концепты',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypAtlGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_groups', to='units.atlcluster', verbose_name='Кластер ATL')),
            ],
            options={
                'verbose_name': 'PYP: ATL группа',
                'verbose_name_plural': 'PYP: ATL группы',
                'ordering': ['cluster', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypKeyConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=32, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'MYP: Ключевой концепт',
                'verbose_name_plural': 'MYP: Ключевые концепты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Strand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1, verbose_name='Абсолютный номер')),
                ('letter', models.PositiveIntegerField(choices=[('1', 'i'), ('2', 'ii'), ('3', 'iii'), ('4', 'iv'), ('5', 'v')], default=1, verbose_name='Метка в критерии')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strands', to='units.mypobjective', verbose_name='Предметная цель')),
            ],
            options={
                'verbose_name': 'MYP: Стрэнд',
                'verbose_name_plural': 'MYP: Стрэнды',
                'ordering': ['objective', 'number', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='TransdisciplinaryTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'PYP: Трансдисциплинарная тема',
                'verbose_name_plural': 'PYP: Трансдисциплинарные темы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StrandLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Описание')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Описание на рус. языке')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strand_levels', to='units.educationallevel', verbose_name='Уровень в IB')),
                ('strand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strand_levels', to='units.strand', verbose_name='Стрэнд')),
            ],
            options={
                'verbose_name': 'MYP: Предметная цель на уровне',
                'verbose_name_plural': 'MYP: Предметные цели на уровне',
                'ordering': ['level', 'strand'],
            },
        ),
        migrations.CreateModel(
            name='PypUnitPlanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название юнита')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Номер')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во часов')),
                ('central_idea', models.TextField(blank=True, null=True, verbose_name='Центральная идея')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Действия')),
                ('reflections_initial', models.TextField(blank=True, null=True, verbose_name='Начальная рефлексия')),
                ('prior_learning', models.TextField(blank=True, null=True, verbose_name='Предшествующий опыт')),
                ('conncetions', models.TextField(blank=True, null=True, verbose_name='Трансдисциплинарные и прошлые связи')),
                ('learning_goals', models.TextField(blank=True, null=True, verbose_name='Цели обучения и критерии успеха')),
                ('questions_teacher', models.TextField(blank=True, null=True, verbose_name='Вопросы учителя')),
                ('questions_student', models.TextField(blank=True, null=True, verbose_name='Вопросы студента')),
                ('engaging_learning', models.TextField(blank=True, null=True, verbose_name='Создание вовлечённого обучения')),
                ('supporting_agency', models.TextField(blank=True, null=True, verbose_name='Поддержание свободного волеизъявления студентов')),
                ('questions_all', models.TextField(blank=True, null=True, verbose_name='Вопросы учителя и студента')),
                ('ongoing_assessment', models.TextField(blank=True, null=True, verbose_name='Текущее оценивание')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Использование ресурсов')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Самооценка учащихся и отзывы сверстников')),
                ('reflections_ongoing', models.TextField(blank=True, null=True, verbose_name='Текущая рефлексия для всех учителей')),
                ('reflections_additional', models.TextField(blank=True, null=True, verbose_name='Дополнительная рефлексия по предметам')),
                ('reflections_teachers', models.TextField(blank=True, null=True, verbose_name='Рефлексия учителя')),
                ('reflections_students', models.TextField(blank=True, null=True, verbose_name='Рефлексия студентов')),
                ('reflections_assessment', models.TextField(blank=True, null=True, verbose_name='Рефлексия оценивания')),
                ('key_concepts', models.ManyToManyField(blank=True, related_name='pyp_unitplans', to='units.pypkeyconcept', verbose_name='Ключевые концепты')),
                ('teachers', models.ManyToManyField(related_name='pyp_unitplans', to=settings.AUTH_USER_MODEL, verbose_name='Учителя')),
                ('transdisciplinary_theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pyp_unitplans', to='units.transdisciplinarytheme', verbose_name='Трансдисциплинарная тема')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pyp_unitplans', to='general.studyyear', verbose_name='Год обучения')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan',
                'verbose_name_plural': 'PYP: UnitPlans',
                'ordering': ['year', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PypRelatedConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_concepts', to='units.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Сопутствующее понятие',
                'verbose_name_plural': 'PYP: UnitPlans - Сопутствующие понятия',
                'ordering': ['unit', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypProfileAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_profiles', to='units.learnerprofile', verbose_name='Профиль студента')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_attributes', to='units.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Развитие профиля студента',
                'verbose_name_plural': 'PYP: UnitPlans - Развитие профиля студента',
                'ordering': ['unit', 'profile'],
            },
        ),
        migrations.CreateModel(
            name='PypLinesOfInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Линия исследования')),
                ('key_concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_lines', to='units.pypkeyconcept', verbose_name='Ключевой концепт')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_lines', to='units.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Линия исследования',
                'verbose_name_plural': 'PYP: UnitPlans - Линии исследования',
                'ordering': ['unit', 'key_concept', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypAtlSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_skills', to='units.pypatlgroup', verbose_name='Группа ATL')),
            ],
            options={
                'verbose_name': 'PYP: ATL навык',
                'verbose_name_plural': 'PYP: ATL навыки',
                'ordering': ['group', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypAtlDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Описание учебных действий')),
                ('atl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='units.pypatlskill', verbose_name='Навык ATL')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='units.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Развитие ATL',
                'verbose_name_plural': 'PYP: UnitPlans - Развитие ATL',
                'ordering': ['unit', 'atl'],
            },
        ),
        migrations.CreateModel(
            name='MypUnitPlannerInterdisciplinary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название междисциплинарного юнита')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во часов')),
                ('purpose_integration', models.TextField(blank=True, null=True, verbose_name='Цель интеграции')),
                ('conceptual_understanding', models.TextField(blank=True, null=True, verbose_name='Концептуальное понимание')),
                ('statement_inquiry', models.TextField(blank=True, null=True, verbose_name='Формулировка исследования')),
                ('tasks', models.TextField(blank=True, null=True, verbose_name='Задания')),
                ('introduction', models.TextField(blank=True, null=True, verbose_name='Введение в МДП')),
                ('learning_teaching', models.TextField(blank=True, null=True, verbose_name='Учебная деятельность')),
                ('formative_assessment', models.TextField(blank=True, null=True, verbose_name='Формирующее оценивание')),
                ('summative_assessment', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание')),
                ('differentiation', models.TextField(blank=True, null=True, verbose_name='Дифференцированный подход')),
                ('aims', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='units.mypaim', verbose_name='Цели')),
                ('criteria', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='units.mypobjective', verbose_name='Критерии оценки')),
                ('explorations', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='units.globalcontextexploration', verbose_name='Линии исследования')),
                ('global_context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_iduplans', to='units.globalcontext', verbose_name='Глобальный контекст')),
                ('key_concepts', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='units.mypkeyconcept', verbose_name='Ключевые концепты')),
                ('objectives', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='units.strand', verbose_name='Предметные цели (стренды)')),
                ('related_concepts', models.ManyToManyField(blank=True, related_name='myp_iduplans', to='units.myprelatedconcept', verbose_name='Сопутствующие концепты')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_iduplans', to='general.studyyear', verbose_name='Год обучения')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Междисциплинарный юнит',
                'verbose_name_plural': 'MYP: UnitPlans - Междисциплинарные юниты',
                'ordering': ['year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='MypUnitPlanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название юнита')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Номер')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во часов')),
                ('conceptual_understanding', models.TextField(blank=True, null=True, verbose_name='Концептуальное понимание')),
                ('statement_inquiry', models.TextField(blank=True, null=True, verbose_name='Формулировка исследования')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Содержание (темы, знания и умения)')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Умения')),
                ('international_mindedness', models.TextField(blank=True, null=True, verbose_name='Межкультурное понимание')),
                ('academic_integrity', models.TextField(blank=True, null=True, verbose_name='Академическая честность')),
                ('language_development', models.TextField(blank=True, null=True, verbose_name='Языковое развитие')),
                ('infocom_technology', models.TextField(blank=True, null=True, verbose_name='Использование средств ИКТ')),
                ('service_as_action', models.TextField(blank=True, null=True, verbose_name='Служение как действие')),
                ('formative_assessment', models.TextField(blank=True, null=True, verbose_name='Формирующее оценивание')),
                ('summative_assessment_task', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание (задачи)')),
                ('summative_assessment_soi', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание (взаимосвязь с SOI)')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Взаимное и самооценивание')),
                ('standardization_moderation', models.TextField(blank=True, null=True, verbose_name='Стандартизация и модерация')),
                ('prior_experiences', models.TextField(blank=True, null=True, verbose_name='Предыдущий опыт обучения')),
                ('learning_experiences', models.TextField(blank=True, null=True, verbose_name='Учебная деятельность')),
                ('teaching_strategies', models.TextField(blank=True, null=True, verbose_name='Стратегии преподавания')),
                ('student_expectations', models.TextField(blank=True, null=True, verbose_name='Ожидания студентов')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Обратная связь')),
                ('differentiation', models.TextField(blank=True, null=True, verbose_name='Дифференцированный подход')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Ресурсы')),
                ('aims', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='units.mypaim', verbose_name='Цели')),
                ('criteria', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='units.mypobjective', verbose_name='Критерии оценки')),
                ('explorations', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='units.globalcontextexploration', verbose_name='Линии исследования')),
                ('global_context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='units.globalcontext', verbose_name='Глобальный контекст')),
                ('interdisciplinary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='units.mypunitplannerinterdisciplinary', verbose_name='Междисциплинарный юнит')),
                ('key_concepts', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='units.mypkeyconcept', verbose_name='Ключевые концепты')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='units.educationallevel', verbose_name='Образовательный уровень')),
                ('objectives', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='units.strand', verbose_name='Предметные цели (стренды)')),
                ('related_concepts', models.ManyToManyField(blank=True, related_name='myp_unitplans', to='units.myprelatedconcept', verbose_name='Сопутствующие концепты')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='syllabus.subject', verbose_name='Предмет')),
                ('teachers', models.ManyToManyField(related_name='myp_unitplans', to=settings.AUTH_USER_MODEL, verbose_name='Учителя')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_unitplans', to='general.studyyear', verbose_name='Год обучения')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan',
                'verbose_name_plural': 'MYP: UnitPlans',
                'ordering': ['year', 'subject', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='MypReflectionPostIdu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('prior', 'Перед началом юнита'), ('during', 'Во время юнита'), ('after', 'После окончания юнита')], max_length=6, verbose_name='Тип рефлексии')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Содержание рефлексии')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_idu_reflections', to=settings.AUTH_USER_MODEL, verbose_name='Автор поста')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_posts', to='units.mypunitplannerinterdisciplinary', verbose_name='Междисциплинарный юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Пост рефлексии',
                'verbose_name_plural': 'MYP: UnitPlans - Посты рефлексии',
                'ordering': ['type', 'post'],
            },
        ),
        migrations.CreateModel(
            name='MypReflectionPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('prior', 'Перед началом юнита'), ('during', 'Во время юнита'), ('after', 'После окончания юнита')], max_length=6, verbose_name='Тип рефлексии')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Содержание рефлексии')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myp_reflections', to=settings.AUTH_USER_MODEL, verbose_name='Автор поста')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_posts', to='units.mypunitplanner', verbose_name='Юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Пост рефлексии',
                'verbose_name_plural': 'MYP: UnitPlans - Посты рефлексии',
                'ordering': ['type', 'post'],
            },
        ),
        migrations.CreateModel(
            name='MypProfileDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myp_profiles', to='units.learnerprofile', verbose_name='Профиль студента')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_develops', to='units.mypunitplanner', verbose_name='Юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Развитие профиля студента',
                'verbose_name_plural': 'MYP: UnitPlans - Развитие профиля студента',
                'ordering': ['profile'],
            },
        ),
        migrations.CreateModel(
            name='MypKeyConceptOfSubjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('comment_rus', models.TextField(blank=True, null=True, verbose_name='Комментарии на рус. языке')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='key_concepts_recomends', to='syllabus.ibsubjectgroup', verbose_name='Предметная группа')),
                ('key_concept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects_recomends', to='units.mypkeyconcept', verbose_name='Ключевой концепт')),
            ],
            options={
                'verbose_name': 'MYP: Ключевые концепции - Рекомендуемый предмет',
                'verbose_name_plural': 'MYP: Ключевые концепции - Рекомендуемые предметы',
                'ordering': ['group', 'key_concept'],
            },
        ),
        migrations.AddField(
            model_name='mypkeyconcept',
            name='groups',
            field=models.ManyToManyField(related_name='key_concepts', through='units.MypKeyConceptOfSubjects', to='syllabus.ibsubjectgroup', verbose_name='Рекомендуемые предметные группы'),
        ),
        migrations.CreateModel(
            name='MypInquiryQuestionIdu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Исследовательский вопрос')),
                ('type', models.CharField(choices=[('factual', 'Фактический'), ('conceptual', 'Концептуальный'), ('debatable', 'Дискуссионный')], default='Factual', max_length=12, verbose_name='Тип вопроса')),
                ('line', models.CharField(max_length=255, null=True, verbose_name='Линия исследования')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_questions', to='units.mypunitplannerinterdisciplinary', verbose_name='Междисциплинарный юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Исследовательский вопрос',
                'verbose_name_plural': 'MYP: UnitPlans - Исследовательские вопросы',
                'ordering': ['type', 'question'],
            },
        ),
        migrations.CreateModel(
            name='MypInquiryQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Исследовательский вопрос')),
                ('type', models.CharField(choices=[('factual', 'Фактический'), ('conceptual', 'Концептуальный'), ('debatable', 'Дискуссионный')], default='Factual', max_length=12, verbose_name='Тип вопроса')),
                ('line', models.CharField(max_length=255, null=True, verbose_name='Линия исследования')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_questions', to='units.mypunitplanner', verbose_name='Юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Исследовательский вопрос',
                'verbose_name_plural': 'MYP: UnitPlans - Исследовательские вопросы',
                'ordering': ['type', 'question'],
            },
        ),
        migrations.CreateModel(
            name='MypAtlSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myp_skills', to='units.atlcluster', verbose_name='Кластер ATL')),
            ],
            options={
                'verbose_name': 'MYP: Навык ATL',
                'verbose_name_plural': 'MYP: Навыки ATL',
                'ordering': ['cluster', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MypAtlDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Описание учебных действий')),
                ('atl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='units.mypatlskill', verbose_name='Навык ATL')),
                ('strand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='units.strand', verbose_name='Предметный стрэнд')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='units.mypunitplanner', verbose_name='Юнит MYP')),
            ],
            options={
                'verbose_name': 'MYP: UnitPlan - Развитие ATL',
                'verbose_name_plural': 'MYP: UnitPlans - Развитие ATL',
                'ordering': ['strand'],
            },
        ),
        migrations.CreateModel(
            name='DpUnitPlanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title unit')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Number')),
                ('levels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('SL', 'Standart Level'), ('HL', 'High Level')], max_length=5), blank=True, default=list, size=None, verbose_name='Levels')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Hours')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('transfer_goals', models.TextField(blank=True, null=True, verbose_name='Transfer goals')),
                ('essential_understandings', models.TextField(blank=True, null=True, verbose_name='Essential Understandings')),
                ('misunderstandings', models.TextField(blank=True, null=True, verbose_name='Missed concepts/misunderstandings')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Skills')),
                ('concepts', models.TextField(blank=True, null=True, verbose_name='Concepts')),
                ('international_mindedness', models.TextField(blank=True, null=True, verbose_name='International Mindedness')),
                ('academic_integrity', models.TextField(blank=True, null=True, verbose_name='Academic Integrity')),
                ('infocom_technology', models.TextField(blank=True, null=True, verbose_name='Information Communication Technology')),
                ('language_learning', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Activating background knowledge', 'Activating background knowledge'), ('Scaffolding for new learning', 'Scaffolding for new learning'), ('Acquisition of new learning through practice', 'Acquisition of new learning through practice'), ('Demonstrating proficiency', 'Demonstrating proficiency')], max_length=64), blank=True, default=list, size=None, verbose_name='Language and learning')),
                ('language_learning_text', models.TextField(blank=True, null=True, verbose_name='Language and learning description')),
                ('ee_connections', models.TextField(blank=True, null=True, verbose_name='EE / Individual project connections')),
                ('tok_connections', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Core theme', 'Core theme'), ('Optional themes', 'Optional themes'), ('Areas of knowledge', 'Areas of knowledge'), ('Key concepts', 'Key concepts')], max_length=64), blank=True, default=list, size=None, verbose_name='TOK Connections')),
                ('tok_connections_text', models.TextField(blank=True, null=True, verbose_name='TOK Connections description')),
                ('cas_connections', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Creativity', 'Creativity'), ('Activity', 'Activity'), ('Service', 'Service')], max_length=64), blank=True, default=list, size=None, verbose_name='CAS Connections')),
                ('cas_connections_text', models.TextField(blank=True, null=True, verbose_name='CAS Connections description')),
                ('formative_assessment', models.TextField(blank=True, null=True, verbose_name='Formative assessment')),
                ('summative_assessment', models.TextField(blank=True, null=True, verbose_name='Summative assessment')),
                ('internal_assessment', models.TextField(blank=True, null=True, verbose_name='Internal assessment')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Peer and self assessment')),
                ('criteria_text', models.TextField(blank=True, null=True, verbose_name='Assessment criteria description')),
                ('prior_experiences', models.TextField(blank=True, null=True, verbose_name='Prior learning experience')),
                ('pedagogical_approaches', models.TextField(blank=True, null=True, verbose_name='Pedagogical approaches')),
                ('student_expectations', models.TextField(blank=True, null=True, verbose_name='Student expectations')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('learning_process', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Lecture', 'Lecture'), ('Socratic seminar', 'Socratic seminar'), ('Small group/pair work', 'Small group/pair work'), ('PowerPoint lecture/notes', 'PowerPoint lecture/notes'), ('Individual presentations', 'Individual presentations'), ('Group presentations', 'Group presentations'), ('Student lecture/leading', 'Student lecture/leading'), ('Interdisciplinary Learning', 'Interdisciplinary Learning')], max_length=64), blank=True, default=list, size=None, verbose_name='Learning Process')),
                ('learning_process_text', models.TextField(blank=True, null=True, verbose_name='Learning Process description')),
                ('differentiation', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Affirm identity – build self-esteem', 'Affirm identity – build self-esteem'), ('Value prior knowledge', 'Value prior knowledge'), ('Scaffold learning', 'Scaffold learning'), ('Extend learning', 'Extend learning')], max_length=64), blank=True, default=list, size=None, verbose_name='Differentiation')),
                ('differentiation_text', models.TextField(blank=True, null=True, verbose_name='Differentiation description')),
                ('learning_experiences', models.TextField(blank=True, null=True, verbose_name='Learning experiences and strategies')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Resources')),
                ('cross_curricular_links', models.TextField(blank=True, null=True, verbose_name='Cross-curricular links')),
                ('co_curricular_links', models.TextField(blank=True, null=True, verbose_name='Co-curricular links')),
                ('work_well', models.TextField(blank=True, null=True, verbose_name='What worked well?')),
                ('work_well_not', models.TextField(blank=True, null=True, verbose_name='What didn’t work well?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes/changes/suggestions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('aims', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='units.dpaim', verbose_name='Aims')),
                ('authors', models.ManyToManyField(related_name='dp_authors', to=settings.AUTH_USER_MODEL, verbose_name='Authors')),
                ('criteria', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='units.criterion', verbose_name='Assessment criteria')),
                ('objectives', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='units.dpobjective', verbose_name='Objectives')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_unitplans', to='syllabus.subject', verbose_name='Subject')),
                ('syllabus_content', models.ManyToManyField(blank=True, related_name='dp_unitplans', to='units.coursecontent', verbose_name='Syllabus Content')),
                ('teachers', models.ManyToManyField(related_name='dp_teachers', to=settings.AUTH_USER_MODEL, verbose_name='Teachers')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_unitplans', to='general.studyyear', verbose_name='Study year')),
            ],
            options={
                'verbose_name': 'DP: UnitPlan',
                'verbose_name_plural': 'DP: UnitPlans',
                'ordering': ['year', 'subject', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='DpReflectionPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Post')),
                ('type', models.CharField(choices=[('prior', 'Перед началом юнита'), ('during', 'Во время юнита'), ('after', 'После окончания юнита')], max_length=6, verbose_name='Type')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_reflections', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_posts', to='units.dpunitplanner', verbose_name='Unit DP')),
            ],
            options={
                'verbose_name': 'DP: UnitPlan - Reflection Post',
                'verbose_name_plural': 'DP: UnitPlans - Reflection Posts',
                'ordering': ['unit', 'type', 'post'],
            },
        ),
        migrations.CreateModel(
            name='DpProfileDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dp_profiles', to='units.learnerprofile', verbose_name='IB Learner Profile')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_develops', to='units.dpunitplanner', verbose_name='Unit DP')),
            ],
            options={
                'verbose_name': 'DP: UnitPlan - Learner Profile',
                'verbose_name_plural': 'DP: UnitPlans - Learner Profile',
                'ordering': ['unit', 'profile'],
            },
        ),
        migrations.CreateModel(
            name='DpObjectiveItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=1, verbose_name='Letter')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='units.dpobjective', verbose_name='Objective')),
            ],
            options={
                'verbose_name': 'DP: Objectives Item',
                'verbose_name_plural': 'DP: Objectives Items',
                'ordering': ['objective', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='DpInquiryQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Inquiry Question')),
                ('type', models.CharField(choices=[('factual', 'Фактический'), ('conceptual', 'Концептуальный'), ('skills-based', 'Skills-based'), ('content-based', 'Content-based'), ('concept-based', 'Concept-based'), ('debatable', 'Дискуссионный')], default='Factual', max_length=16, verbose_name='Type')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_questions', to='units.dpunitplanner', verbose_name='Unit DP')),
            ],
            options={
                'verbose_name': 'DP: UnitPlan - Inquiry Question',
                'verbose_name_plural': 'DP: UnitPlans - Inquiry Questions',
                'ordering': ['unit', 'type', 'question'],
            },
        ),
        migrations.CreateModel(
            name='DpAtlSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dp_skills', to='units.atlcluster', verbose_name='Кластер ATL')),
            ],
            options={
                'verbose_name': 'DP: ATL Skills',
                'verbose_name_plural': 'DP: ATL Skills',
                'ordering': ['cluster', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DpAtlDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('atl', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atl_develops', to='units.dpatlskill', verbose_name='ATL Skill')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='units.dpunitplanner', verbose_name='Unit DP')),
            ],
            options={
                'verbose_name': 'DP: UnitPlan - Approaches to Learning',
                'verbose_name_plural': 'DP: UnitPlans - Approaches to Learning',
                'ordering': ['unit', 'atl'],
            },
        ),
        migrations.CreateModel(
            name='CourseTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=12, verbose_name='Letters')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('discipline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dp_topics', to='syllabus.ibdiscipline', verbose_name='Discipline IB')),
            ],
            options={
                'verbose_name': 'DP: Course topic',
                'verbose_name_plural': 'DP: Course topics',
                'ordering': ['discipline', 'letter'],
            },
        ),
        migrations.AddField(
            model_name='coursecontent',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_contents', to='units.coursetopic', verbose_name='Course Topic'),
        ),
        migrations.CreateModel(
            name='AchievementLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True, verbose_name='Описание')),
                ('name_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('point', models.PositiveIntegerField(default=0, verbose_name='Баллы')),
                ('strand_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achieve_levels', to='units.strandlevel', verbose_name='Предметная цель')),
            ],
            options={
                'verbose_name': 'MYP: Уровень достижений',
                'verbose_name_plural': 'MYP: Уровни достижений',
                'ordering': ['strand_level', 'point'],
            },
        ),
    ]
