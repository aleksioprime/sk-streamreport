# Generated by Django 4.2.4 on 2023-11-20 18:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ibo', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PypAtlGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_groups', to='ibo.atlcluster', verbose_name='Кластер ATL')),
            ],
            options={
                'verbose_name': 'PYP: ATL группа',
                'verbose_name_plural': 'PYP: ATL группы',
                'ordering': ['cluster', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypKeyConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=32, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'MYP: Ключевой концепт',
                'verbose_name_plural': 'MYP: Ключевые концепты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PypUnitPlanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название юнита')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Номер')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во часов')),
                ('central_idea', models.TextField(blank=True, null=True, verbose_name='Центральная идея')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Действия')),
                ('reflections_initial', models.TextField(blank=True, null=True, verbose_name='Начальная рефлексия')),
                ('prior_learning', models.TextField(blank=True, null=True, verbose_name='Предшествующий опыт')),
                ('conncetions', models.TextField(blank=True, null=True, verbose_name='Трансдисциплинарные и прошлые связи')),
                ('learning_goals', models.TextField(blank=True, null=True, verbose_name='Цели обучения и критерии успеха')),
                ('questions_teacher', models.TextField(blank=True, null=True, verbose_name='Вопросы учителя')),
                ('questions_student', models.TextField(blank=True, null=True, verbose_name='Вопросы студента')),
                ('engaging_learning', models.TextField(blank=True, null=True, verbose_name='Создание вовлечённого обучения')),
                ('supporting_agency', models.TextField(blank=True, null=True, verbose_name='Поддержание свободного волеизъявления студентов')),
                ('questions_all', models.TextField(blank=True, null=True, verbose_name='Вопросы учителя и студента')),
                ('ongoing_assessment', models.TextField(blank=True, null=True, verbose_name='Текущее оценивание')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Использование ресурсов')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Самооценка учащихся и отзывы сверстников')),
                ('reflections_ongoing', models.TextField(blank=True, null=True, verbose_name='Текущая рефлексия для всех учителей')),
                ('reflections_additional', models.TextField(blank=True, null=True, verbose_name='Дополнительная рефлексия по предметам')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Замечания')),
                ('key_concepts', models.ManyToManyField(blank=True, related_name='pyp_unitplans', to='pyp.pypkeyconcept', verbose_name='Ключевые концепты')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan',
                'verbose_name_plural': 'PYP: UnitPlans',
                'ordering': ['year', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='TransdisciplinaryTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('description_rus', models.TextField(null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'PYP: Трансдисциплинарная тема',
                'verbose_name_plural': 'PYP: Трансдисциплинарные темы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PypUnitTeacherRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=32, null=True, verbose_name='Роль')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_roles', to='pyp.pypunitplanner', verbose_name='Юнит PYP')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_unitroles', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'PYP: Роль автора юнита',
                'verbose_name_plural': 'PYP: Роли автора юнита',
                'ordering': ['unit', 'user', 'role'],
            },
        ),
        migrations.AddField(
            model_name='pypunitplanner',
            name='teachers',
            field=models.ManyToManyField(related_name='pyp_unitplans', through='pyp.PypUnitTeacherRoles', to=settings.AUTH_USER_MODEL, verbose_name='Учителя'),
        ),
        migrations.AddField(
            model_name='pypunitplanner',
            name='transdisciplinary_theme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pyp_unitplans', to='pyp.transdisciplinarytheme', verbose_name='Трансдисциплинарная тема'),
        ),
        migrations.AddField(
            model_name='pypunitplanner',
            name='year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pyp_unitplans', to='general.studyyear', verbose_name='Год обучения'),
        ),
        migrations.CreateModel(
            name='PypRelatedConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_concepts', to='pyp.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Сопутствующее понятие',
                'verbose_name_plural': 'PYP: UnitPlans - Сопутствующие понятия',
                'ordering': ['unit', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypReflectionPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('teacher', 'Рефлексия учителя'), ('students', 'Рефлексия студентов'), ('assessment', 'Рефлексия оценивания')], max_length=10, verbose_name='Тип рефлексии')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Содержание рефлексии')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pyp_reflections', to=settings.AUTH_USER_MODEL, verbose_name='Автор поста')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_reflections', to='pyp.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Пост рефлексии',
                'verbose_name_plural': 'PYP: UnitPlans - Посты рефлексии',
                'ordering': ['type', 'post'],
            },
        ),
        migrations.CreateModel(
            name='PypProfileAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_profiles', to='ibo.learnerprofile', verbose_name='Профиль студента')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_attributes', to='pyp.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Развитие профиля студента',
                'verbose_name_plural': 'PYP: UnitPlans - Развитие профиля студента',
                'ordering': ['unit', 'profile'],
            },
        ),
        migrations.CreateModel(
            name='PypLinesOfInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Линия исследования')),
                ('key_concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_lines', to='pyp.pypkeyconcept', verbose_name='Ключевой концепт')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiry_lines', to='pyp.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Линия исследования',
                'verbose_name_plural': 'PYP: UnitPlans - Линии исследования',
                'ordering': ['unit', 'key_concept', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypAtlSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyp_skills', to='ibo.atlcluster', verbose_name='Кластер ATL')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pyp_skills', to='pyp.pypatlgroup', verbose_name='Группа ATL')),
            ],
            options={
                'verbose_name': 'PYP: ATL навык',
                'verbose_name_plural': 'PYP: ATL навыки',
                'ordering': ['group', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PypAtlDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Описание учебных действий')),
                ('atl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='pyp.pypatlskill', verbose_name='Навык ATL')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atl_develops', to='pyp.pypunitplanner', verbose_name='Юнит PYP')),
            ],
            options={
                'verbose_name': 'PYP: UnitPlan - Развитие ATL',
                'verbose_name_plural': 'PYP: UnitPlans - Развитие ATL',
                'ordering': ['unit', 'atl'],
            },
        ),
    ]
