version: '3.8'

services:
  database:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env/.env.prod.db

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/backend/staticfiles
      - media_volume:/home/app/backend/mediafiles
    depends_on:
      - database
    expose:
      - 8000
    env_file:
      - ./backend/.env/.env.prod

  frontend:
    build:
      context: ./frontend
    command: sh -c "npm rebuild esbuild && npm run dev -- --host"
    environment:
      PORT: '8080'
      HOST: '0.0.0.0'
    ports:
      - '8080:8080'
    volumes:
      - ./frontend:/frontend

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/backend/staticfiles
      - media_volume:/home/app/backend/mediafiles
    ports:
      - 1337:80
    depends_on:
      - backend
      
volumes:
  postgres_data:
  static_volume:
  media_volume:
