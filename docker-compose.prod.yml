version: '3.8'

services:
  database:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env/.env.db

  celery:
    build:
      dockerfile: ./docker/product/backend/Dockerfile
    command: celery -A config worker --loglevel=info
    env_file:
      - ./backend/.env/.env
    depends_on:
      - database
      - backend
      - redis
  
  celery-beat:
    build:
      dockerfile: ./docker/product/backend/Dockerfile
    command: celery -A config beat --loglevel=info
    depends_on:
      - backend
      - redis

  backend:
    container_name: backend
    build:
      dockerfile: ./docker/product/backend/Dockerfile
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./static:/home/app/backend/staticfiles
      - ./media:/home/app/backend/mediafiles
    depends_on:
      - database
      - redis
    expose:
      - 8000
    env_file:
      - .env/.env.prod

  frontend:
    container_name: frontend
    build:
      dockerfile: ./docker/product/frontend/Dockerfile
    command: sh -c "npm rebuild esbuild && npm run dev -- --host"
    environment:
      PORT: '8080'
      HOST: '0.0.0.0'
    ports:
      - '8080:8080'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/home/app/backend/staticfiles
      - ./media:/home/app/backend/mediafiles
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend
      
volumes:
  postgres_data:

