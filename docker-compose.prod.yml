version: '3.8'

services:
  db:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./env/.env.prod.db

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend/:/usr/src/backend/
    depends_on:
      - db
    ports:
      - 8000:8000
    env_file:
      - ./env/.env.dev

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: sh -c "npm rebuild esbuild && npm run dev"
    environment:
      PORT: '8080'
      HOST: '0.0.0.0'
    ports:
      - '8080:8080'
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      
volumes:
  postgres_data:
